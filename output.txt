8064
9078
affb
b1f4
c0cb
df7d
e07b
f36c
0000
0600
09c0
0850
08e0
0a00
0a38
105a
10c6
19ac
188b
43e8
600a
7fe2
2042
2242
2442
2642
2842
2a42
2c42
2e42
3042
3240
3442
3642
3842
3a42
3c42
1812
;
; Test MOV R Im
;
8064
9078
affb
b1f4
c0cb
df7d
e07b
e000
8005
9ffb
9001
;
; Test ALU ops
;
8000
9001
a002
b003
cf9c
d3e8
2072
2135
22f5
22f4
24b3
2735
2974
2af2
2c72
2ef2
3073
3230
3573
3773
3973
3b73
3d73
21c0
21c0
21c8
;
; Test MUL/U and DIV
;
8000
9002
affb
b005
c064
d3e8
2735
24f4
24b1
2431
28b3
2974
;
; Test Jumps
;
8005
9005
a000
4005
0000
0000
0000
0000
0000
e001
2231
6001
0000
e001
2232
7001
0000
e001
2231
7001
e001
e064
;
; Test NOPs and Halt
;
8001
9002
0000
2231
0000
0000
0000
2270
0000
0600
8064
;
; Test MOV 2 Regs
;
8000
9001
a000
d002
0950
2072
0998
09c0
2231
0a20
0600
;
; Test LDR and STR
;
8000
9001
a002
b064
cffb
1018
1808
1010
1811
1861
1070
1071
2236
19b0
0600
;
; Fibonacci Sequence
; R5 = # R0,1,2 = Vars R3 = counter R4 = 1 for add counter
d009
8001
9000
a000
b000
c001
2011
0840
0888
20dc
22f5
7ffa
8000
1810
0600
;
; Fib Assignment
; R5 = # R0,1,2 = Vars R3 = counter R4 = 1 for add counter
8080
9000
1029
2d6d
600f
8001
9000
a000
b000
c001
1849
2368
6007
2011
0840
0888
18d4
20dc
22f5
7ff9
0600
;
; EC i/o test
;
8da2
9007
2401
9fff
a000
1842
1808
0600
